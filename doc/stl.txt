STL

sequence containers
    - vector
    - string
    - dequeue
Associative containers
    - set
    - multiset
    - map
    - multimap

iterators
    input iterators
        read-only
        read-only once
    output iterators
        write-only
        written once
    io iterators
    forward iterators
        both input and output capabilities
        can read/write multiple times in the same location

functor class
    any class that overloads the () operator

Note that there are Non STL standard containers
    container adaptors are an example of these since they dont provide access
    to the underlying iterators, and their interface is different

Contiguous memory
Node based

The Slicing problem 
    --> https://en.wikipedia.org/wiki/Object_slicing
    Basically, whenever we want to copy a subclass to a base class
    the members from the derived class wont be copied, the problem
    is that c++ performs calls to copies implicitly sometimes, so it's
    hard to spot, such as when working with containers

    A solution would be to make the copy operators virtual 
        --> https://stackoverflow.com/questions/274626/what-is-object-slicing 

    You cannot solve the slicing problems through virtual methods because it
    is not allowed in the language


Algorithms
    find
        find first or last occerence
    count
        count number of instances on a criteria

